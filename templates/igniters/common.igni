#!/bin/sh


SERVICES_DIR="/Services"


expect_bundle () {
    if [ -z "${1}" ]; then
        echo "No software bundle name given as first arument!"
        return 1
    fi
    return 0
}


# Stolen from Sofin:
to_iter () {
    printf "%s\n" "${@}" | tr ' ' '\n' 2>/dev/null
}


# Stolen from Sofin:
debug () {
    if [ -n "${*}" ] && [ -n "${DEBUG}" ]; then
        printf "#%b%s%b\n" "\033[38;5;97m" "${@}" "\033[39m" >&2
    fi
    return 0
}


start () {
    _bundle="${1}"
    expect_bundle "${_bundle}"
    shift
    _commands="'${@}'"
    if [ -z "${_commands}" ]; then
        echo "Error: No commands (start_cmd) given to ignite()!"
        return 1
    fi
    _pid="$(cat "${SERVICES_DIR}/${_bundle}/service.pid" 2>/dev/null)"
    kill -0 "${_pid}" 2>/dev/null
    if [ "0" = "${?}" ]; then
        echo "igni: ${_bundle} already running! Pid: ${_pid}"
        return 0
    else
        echo "igni: Start: ${_bundle}"
        ${SHELL} -c "eval ${_commands}" && \
            return 0
    fi
}


stop () {
    deathnote "${*}"
}


status () {
    _bundle="${1}"
    expect_bundle "${_bundle}"
    _pid="$(cat "${SERVICES_DIR}/${_bundle}/service.pid" 2>/dev/null)"
    if [ -n "${_pid}" ]; then
        kill -0 "${_pid}" 2>/dev/null
        if [ "0" = "${?}" ]; then
            echo "igni: ${_bundle} is ALIVE, pid(s): ${_pid}"
            return 0
        else
            echo "igni: ${_bundle} is DEAD"
            return 1
        fi
    else
        echo "igni: ${_bundle} is DEAD"
        return 1
    fi
}


reload () {
    _bundle="${1}"
    expect_bundle "${_bundle}"
    shift
    _commands="'${@}'"
    _pid="$(cat "${SERVICES_DIR}/${_bundle}/service.pid" 2>/dev/null)"
    if [ -n "${_pid}" ]; then
        kill -0 "${_pid}" 2>/dev/null
        if [ "0" = "${?}" ]; then
            echo "igni: Reload: ${_bundle}"
            kill -HUP "${_pid}" 2>/dev/null
            sleep 2
            if [ -n "${_commands}" ] && [ "''" != "${_commands}" ]; then
                debug "igni: Post-reload commands: ${_commands}"
                ${SHELL} -c "eval '${_commands}'"
                sleep 1
            fi
        else
            echo "igni: Failed to reload ${_bundle} - service is DEAD!"
            return 1
        fi
    fi
    return 0
}


deathnote () {
    _bundle="${1}"
    expect_bundle "${_bundle}"
    _pid="$(cat "${SERVICES_DIR}/${_bundle}/service.pid" 2>/dev/null)"
    if [ -n "${_pid}" ]; then
        echo "igni: Stop ${_bundle} pid(s): ${_pid}"
        for _apid in $(to_iter "${_pid}"); do
            {
                kill -CONT "${_apid}";
                kill -INT "${_apid}";
                sleep 1;
                kill -TERM "${_apid}";
                sleep 1;
                kill -KILL "${_apid}";
                sleep 2;
            } 2>/dev/null
        done
    else
        echo "igni: ${_bundle} is not started!"
        return 1
    fi
    rm -f "${SERVICES_DIR}/${_bundle}/service.pid"
    return 0
}


test () {
    _bundle="${1}"
    expect_bundle "${_bundle}"
    shift
    _commands="'${@}'"
    if [ -z "${_commands}" ]; then
        echo "igni: No commands, no-op."
        return 0
    fi
    ${SHELL} -c "eval '${_commands}'"
}


ignite () {
    _args="${*}"
    eval "${_args}" >/dev/null 2>/dev/null
    debug "igni: ignite(${name}), action: '${action}', (args: ${_args})"
    case "${action}" in
        start)
            start "${name}" "${start_cmd}"
            ;;

        reload)
            reload "${name}" "${reload_cmd}"
            ;;

        stop)
            stop "${name}" # "${stop_cmd}"
            ;;

        restart)
            stop "${name}" # "${stop_cmd}"
            start "${name}" "${start_cmd}"
            ;;

        status)
            status "${name}" # "${status_cmd}"
            ;;

        test)
            test "${name}" "${test_cmd}"
            ;;

        watch)
            _bundle="${name}"
            expect_bundle "${_bundle}"
            _pid="$(cat "${SERVICES_DIR}/${_bundle}/service.pid" 2>/dev/null)"
            if [ -z "${_pid}" ]; then
                start "${_bundle}" "${start_cmd}"
            else
                kill -0 "${_pid}" || \
                    start "${_bundle}" "${start_cmd}"
            fi
            ;;

        *)
            echo "Usage:"
            echo "      ${0} [ start | stop } restart | reload | status | test | watch ]"
            echo
            return 1
            ;;
    esac
    return 0
}
