include "base"
include "base-FreeBSD"

only_bits "64"
only_as "root"
only_for "FreeBSD"


setup_network () {
    note "Configuring router address: $(distn "${default_network}.1") on device: $(distn "${default_bridge_device}")"
    ${SED_BIN} -i '' -e \
        "s|^ifconfig_bridge0_aliases.*$|ifconfig_bridge0_aliases=\"inet ${default_network}.1/16\"|" \
        /etc/rc.conf.local

    note "Enabling IP forwarding"
    ${SED_BIN} -i '' -e \
        's|^net.inet.ip.forwarding.*$|net.inet.ip.forwarding=1|' \
        /etc/sysctl.conf
    ${SYSCTL_BIN} net.inet.ip.forwarding=1
}


install_governor () {
    ${CP_BIN} /Projects/svdOS/gvr /tmp/gvr_tmp
    ${SED_BIN} -i '' -e "s|__JAIL_ROUTER_NETWORK|${default_network}|" /tmp/gvr_tmp
    ${SED_BIN} -i '' -e "s|__JAIL_SHARED_DOMAIN|${default_jails_domain}|" /tmp/gvr_tmp
    ${MV_BIN} /tmp/gvr_tmp /usr/bin/gvr
    ${CHMOD_BIN} 750 /usr/bin/gvr
}


main () {
    validate \
        _remote="${REMOTE}" \
        default_network_device="${default_network_device}" \
        default_www_user="${default_www_user}" \
        remote_vpn_server="${remote_vpn_server}" \
        remote_ip="${ip}" \
        openvpn_servicedir="${openvpn_servicedir}" \
        vpn_network="${vpn_network:-${default_network}}" \
        default_vlan_device="${default_vlan_device}" \
        default_vpn_device="${default_vpn_device}" \
        default_bridge_device="${default_bridge_device}"

    # Make sure VPN keys are available before we invoke setup process:
    for k in crt key; do
        if [ ! -f "templates/vpn/${REMOTE}.${k}" ]; then
            error "Missing VPN file: $(diste "templates/vpn/${REMOTE}.${k}") - it's required to set up VPN client correctly! Please read $(distd "docs/generate-vpn-key.md")"
        fi
    done

    note "Setting up new dedicated system on host: $(distn "${_host}"), External IP: $(distn "${ip}"), remote VPN server: $(distn "${remote_vpn_server}"), default VPN network: $(distn "${default_network}")"

    # base tasks:
    setup_base_system
    install_software

    # dedicated backend specific tasks:
    install_governor

    setup_network
    setup_vpn_nat

    install_openvpn_launchers
    setup_openvpn

    install_unbound_launchers
    setup_unbound

    reboot_and_quit 3
}


reboot_and_quit () {
    warn "Your machine will reboot now, to load new kernel and base systemâ€¦"
    if [ "FreeBSD" = "${SYSTEM_NAME}" ]; then
        mkdir -p /usr/local/bin
        printf "%s\n%s\n%s\n" '#!/bin/sh' "sleep ${1:-5}" 'reboot' > /usr/local/bin/reboot_delayed
        ${CHMOD_BIN} 755 /usr/local/bin/reboot_delayed
        ${DAEMON_BIN} /usr/local/bin/reboot_delayed
        exit
    else
        reboot && exit
    fi
}
