#!/bin/sh

. lib/shable

_inventory="${1}"
_reign="${2}"


if [ -z "${_inventory}" ]; then
    error "Inventory required as first param!"
else
    if [ -z "${_reign}" ]; then
        error "Reign task required as second param!"
    else
        # Say hello ;)
        note "${SHABLE_NAME}: $(distn "v${SHABLE_VERSION}") is executing task: $(distn "${_reign}"), on host: $(distn "$(${HOSTNAME_BIN})") ($(distn "${SYSTEM_NAME}"))"

        #
        # NOTE: Shable assumes that at this point all necessary facts and tasks were loadedâ€¦
        #

        # Load local cached facts (if any)
        if [ -d "facts/cached" ]; then
            if [ -f "${DEFAULT_CACHE_FILE_LOCAL}" ]; then
                debug "+ common facts file: $(distd "${DEFAULT_CACHE_FILE_LOCAL}")"
                . "${DEFAULT_CACHE_FILE_LOCAL}"
            fi

            for _facts in facts/cached/*.facts; do
                if [ -f "${_facts}" ]; then
                    if [ "${DEFAULT_CACHE_FILE_LOCAL}" != "${_facts}" ]; then
                        debug "+ additional facts from cached file: $(distd "${_facts}")"
                        . "${_facts}"
                    fi
                fi
            done
        fi

        # Load inventory facts
        debug "${SHABLE_NAME}: Load inventory: ${_inventory} for remote: ${REMOTE}"
        inventory_read "${_inventory}" "${REMOTE}"

        # Set fallback for empty value of REMOTE:
        if [ -z "${REMOTE}" ]; then
            REMOTE="${HOST:-${DEFAULT_HOST}}"
            debug "${SHABLE_NAME}: Set value of REMOTE: ${REMOTE}"
        fi

        # Load reign task as last
        if [ -f "reigns/${_reign}.task" ]; then
            debug "+ reign task file: $(distd "reigns/${_reign}.task")"
            . "reigns/${_reign}.task"
        elif [ -f "${SHABLE_NAME}/reigns/${_reign}.task" ]; then
            debug "+ common reign task file: $(distd "${SHABLE_NAME}/reigns/${_reign}.task")"
            . "${SHABLE_NAME}/reigns/${_reign}.task"
        else
            error "No such reign task: '$(diste "${_reign}")'"
        fi

        # call validation of required software defined in lib/vars (*_BIN):
        if [ -z "${SKIP_ENV_VALIDATION}" ]; then
            debug "${SHABLE_NAME}: Invoke validate_env()"
            validate_env
        fi

        # call main() from reign task:
        debug "${SHABLE_NAME}: Invoke main()"
        main

        # call cleanup of cached tasks (sensitive vault data):
        debug "${SHABLE_NAME}: Invoke cleanup_fragile_facts()"
        cleanup_fragile_facts
    fi
fi
